---
title: "GAPMINDER | LIFE EXPECTANCIES 2007"
format: 
  dashboard:
    embed-resources: true
theme: lux
---

```{r}
if(!require(pacman)) install.packages("pacman")
pacman::p_load(tidyverse, 
               gapminder,
               bslib, 
               bsicons, 
               shiny,
               rnaturalearth,
               plotly,
               countrycode,
               reactable,
               htmltools)
```

```{r}
gap_07 <- gapminder %>% 
  filter(year == 2007)

highest_lifeExp_country <- gap_07 %>%
  arrange(-lifeExp) %>% 
  head(1) %>% 
  pull(country)

highest_lifeExp_value <- gap_07 %>%
  arrange(-lifeExp) %>% 
  head(1) %>% 
  pull(lifeExp) %>% 
  round(1)

lowest_lifeExp_country <- gap_07 %>%
  arrange(lifeExp) %>% 
  head(1) %>% 
  pull(country)

lowest_lifeExp_value <- gap_07 %>%
  arrange(lifeExp) %>% 
  head(1) %>% 
  pull(lifeExp) %>% 
  round(1)

lifeExp_average <- gap_07 %>% 
  summarise(weighted_mean = sum(lifeExp*pop)/sum(pop)) %>% 
  round(1)

```

```{r}
country_shapess <- rnaturalearth::ne_countries()

#ggplot(country_shapess) + geom_sf()

gap_07 <- gap_07 %>% 
  mutate(
    country_code = countrycode(country, 
                               "country.name", 
                               "iso3c")
    )


#setdiff(gap_07$country_code, country_shapess$adm0_a3)

mm <- left_join(country_shapess, gap_07,
          by = c("adm0_a3" = "country_code")) %>% 
  mutate(tooltip_label = paste(country,
                               round(lifeExp, 1),
                               sep = ": ")) %>% 
  ggplot() + 
  geom_sf(aes(geometry = geometry, fill = lifeExp, text = tooltip_label)) +
  theme_void() +
  theme(legend.position = "none")

ggplotly_mm <- ggplotly(mm, tooltip = "text")
```

```{r}
top_20_country <- gap_07 %>% 
  arrange(-lifeExp) %>% 
  head(20) %>%  
  select(country, lifeExp) %>%
  mutate(tooltip_label = paste(country,
                               round(lifeExp, 1),
                               sep = ": ")) %>%
  
  ggplot(aes(x = lifeExp, 
             y = reorder(country, lifeExp), 
             fill = lifeExp,
             text = tooltip_label)) +
  geom_col() +
  geom_text(aes(label = round(lifeExp, 1)),
            nudge_x = -10,
            color = "white") +
  labs(x = "Country",
       y = "Life Exp") +
  theme(legend.position = "none")

top_20_country_ggplotly <- 
  ggplotly(top_20_country, tooltip = "text")
```

# HOME

## Row 1 {height=30%}

```{r}
value_box(
  title = "Highest Life Expectancy",
  value = highest_lifeExp_value,
  showcase = bsicons::bs_icon("heart"),
  theme = "primary",
  p(paste0("(", highest_lifeExp_country, ")"))
)
```

```{r}
value_box(
  title = "Lowest Life Expectancy",
  value = lowest_lifeExp_value,
  showcase = bsicons::bs_icon("thermometer"),
  theme = value_box_theme(bg = "#214733"),
  p(paste0("(", lowest_lifeExp_country, ")"))
)
```

```{r}
value_box(
  title = "Average Life Expectancy",
  value = lifeExp_average,
  showcase = bsicons::bs_icon("graph-up"),
  theme = value_box_theme(bg = "#3f71ab")
)
```

## Row 2 {height=70%}


### {width=70%}
```{r title = "Map of countries by life expectancy"}
ggplotly_mm
```

### {width=30%}

```{r title = "Top 20 Countries by Life Expectancy"}
top_20_country_ggplotly
```


# DOWNLOAD DATA

The data used in this dashboard is shown below, and can be downloaded as a CSV.

```{r}
htmltools::browsable(
  reactable(gapminder, defaultPageSize = 5,
            elementId = "gapminder-table",
            searchable = T, filterable = T),
  
    tags$button("Download as CSV", onclick = "Reactable.downloadDataCSV('gapminder-table')")
)
```



# ABOUT

Blablabla

<iframe width="560" height="315" src="https://www.youtube.com/embed/3oymwbwfOtk?si=c4aLWXuOxol3_ud_" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>